C51 COMPILER V9.60.7.0   LCD                                                               08/28/2025 16:11:08 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: D:\keil5C51\C51\BIN\C51.EXE app\lcd.c LARGE OPTIMIZE(0,SPEED) BROWSE MODC2 INCDIR(.\app;.\base) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\lcd.lst) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include "lcd.h"
   2          #include <SN8F5708.h>
   3          #include "definition.h"
   4          
   5          #define ON 1
   6          #define OFF 0
   7          
   8          uint8_t code table[] = {0x50, 0xde, 0xb0, 0x94, 0x1e, 0x15, 0x11, 0xdc, 0x10, 0x14, 0x61, 0x1a, 0x15, 0xbf
             -, 0x71, 0xff, 0x38, 0x39, 0x58, 0xbb};
   9          // 0    1    2    3    4    5    6    7    8    9    E    H    S    -    C   È«Ãð  P    F    N    r
  10          
  11          void led_out(uint16_t led_data)
  12          {
  13   1              P0 = led_data;
  14   1      }
  15          
  16          void Disp_Air_Temp(uint16_t in_data)
  17          {
  18   1              uint8_t ddd;
  19   1              ddd = in_data / 100;
  20   1              Air_bai = table[ddd];
  21   1              ddd = in_data % 100 / 10;
  22   1              Air_shi = table[ddd];
  23   1              ddd = in_data % 10;
  24   1              Air_ge = table[ddd];
  25   1      }
  26          
  27          void Disp_Sol_Temp(uint16_t in_dat)
  28          {
  29   1              uint8_t dd;
  30   1              dd = in_dat / 100;
  31   1              Sol_bai = table[dd];
  32   1              dd = in_dat % 100 / 10;
  33   1              Sol_shi = table[dd];
  34   1              dd = in_dat % 10;
  35   1              Sol_ge = table[dd];
  36   1      }
  37          
  38          void Disp_Air_Speed(uint8_t in_air)
  39          {
  40   1              uint8_t aa;
  41   1              aa = in_air / 10;
  42   1              Air_speed_shi = table[aa];
  43   1              aa = in_air % 10;
  44   1              Air_speed_ge = table[aa];
  45   1      }
  46          
  47          void Disp_Air_Speed_Sleep(void)
  48          {
  49   1              Air_speed_shi = table[13];
  50   1              Air_speed_ge = table[13];
  51   1      }
  52          
  53          /* Error Disp */
C51 COMPILER V9.60.7.0   LCD                                                               08/28/2025 16:11:08 PAGE 2   

  54          void Disp_Air_Error(uint8_t in_err)
  55          {
  56   1              Air_bai = table[10]; // E
  57   1              Air_shi = table[19]; // r
  58   1              Air_ge = table[in_err];
  59   1      }
  60          
  61          void Disp_Sol_Error(uint8_t in_err)
  62          {
  63   1              Sol_bai = table[10]; // E
  64   1              Sol_shi = table[19]; // r
  65   1              Sol_ge = table[in_err];
  66   1      }
  67          
  68          /* Sleep Disp */
  69          void Disp_Air_Sleep(void)
  70          {
  71   1              Air_bai = table[13];       // -
  72   1              Air_shi = table[13];       // -
  73   1              Air_ge = table[13];                // -
  74   1              Air_speed_shi = table[13]; // -
  75   1              Air_speed_ge = table[13];  // -
  76   1      }
  77          void Disp_Sol_Sleep(void)
  78          {
  79   1              Sol_bai = table[13]; // -
  80   1              Sol_shi = table[13]; // -
  81   1              Sol_ge = table[13];      // -
  82   1      }
  83          
  84          void Disp_Air_Off(void)
  85          {
  86   1              //??
  87   1              Air_bai = table[15];    
  88   1              Air_shi = table[15]; 
  89   1              Air_ge = table[15];      
  90   1      }
  91          
  92          void Disp_Sol_Off(void)
  93          {
  94   1              //??
  95   1              Sol_bai = table[15];    
  96   1              Sol_shi = table[15]; 
  97   1              Sol_ge = table[15];     
  98   1      }
  99          void Disp_Air_Speed_Off(void)
 100          {
 101   1              //??
 102   1              Air_speed_shi = table[15]; 
 103   1              Air_speed_ge = table[15]; 
 104   1      }
 105          
 106          
 107          /* ON/OFF Disp */
 108          void Disp_On_Off(uint8_t in_on_off)
 109          {
 110   1              if (in_on_off == ON)
 111   1              {
 112   2                      Sol_bai = table[15];
 113   2                      Sol_shi = table[0]; // O
 114   2                      Sol_ge = table[18]; // N
 115   2              }
C51 COMPILER V9.60.7.0   LCD                                                               08/28/2025 16:11:08 PAGE 3   

 116   1              else
 117   1              {
 118   2                      Sol_bai = table[0];      // O
 119   2                      Sol_shi = table[17]; // F
 120   2                      Sol_ge = table[17];      // F
 121   2              }
 122   1      }
 123          
 124          ///* P0X Disp*/
 125          // void Disp_P0X(uint8_t in_p)
 126          //{
 127          //      Air_bai = table[16];  // P
 128          //      Air_shi = table[0];       // 0
 129          //      Air_ge = table[in_p]; // X
 130          // }
 131          
 132          void Disp_cf(uint8_t in_cf)
 133          {
 134   1              if (in_cf == 0)
 135   1              {
 136   2                      Sol_bai = table[13]; // -
 137   2                      Sol_shi = table[14]; // C
 138   2                      Sol_ge = table[13];      // -
 139   2              }
 140   1              else
 141   1              {
 142   2                      Sol_bai = table[13]; // -
 143   2                      Sol_shi = table[17]; // F
 144   2                      Sol_ge = table[13];      // -
 145   2              }
 146   1      }
 147          
 148          void Disp_clean(void)
 149          {
 150   1              Sol_bai = 0xff;
 151   1              Sol_shi = 0xff;
 152   1              Sol_ge = 0xff;
 153   1      }
 154          
 155          /*
 156           * ???????? ????/???
 157           * ???in_number ??? in_menu_level ????
 158           */
 159          
 160          void disp_Px_flicker(uint8_t in_num)
 161          {
 162   1              if (P_ss_flag == 1 && P_ss_bz == 1)
 163   1              {
 164   2                      Air_bai = table[16];    // P
 165   2                      Air_shi = table[0];             // 0
 166   2                      Air_ge = table[in_num]; // X
 167   2                      P_ss_bz = 0;
 168   2              }
 169   1              else if (P_ss_flag == 0 && P_ss_bz == 0)
 170   1              {
 171   2                      Air_bai = 0xff; // P
 172   2                      Air_shi = 0xff; // 0
 173   2                      Air_ge = 0xff;  // X
 174   2                      P_ss_bz = 1;
 175   2              }
 176   1      }
 177          
C51 COMPILER V9.60.7.0   LCD                                                               08/28/2025 16:11:08 PAGE 4   

 178          void disp_Px_longLight(uint8_t in_num)
 179          {
 180   1              Air_bai = table[16];    // P
 181   1              Air_shi = table[0];             // 0
 182   1              Air_ge = table[in_num]; // X
 183   1      }
 184          
 185          void Disp_First_menu_number(uint8_t in_number, inmenu_level) // ????
 186          {
 187   1      //      if (inmenu_level == 1) // ???????????
 188   1      //      {
 189   1      //              disp_Px_flicker(in_number); // ???????
 190   1      //      }
 191   1      //      else // ????????????
 192   1      //      {
 193   1      //              disp_Px_longLight(in_number); // ????????
 194   1      //      }
 195   1              disp_Px_longLight(in_number); // ????????
 196   1      }
 197          
 198          /* AIR DISP HANDLE*/
 199          void Disp_Air_Handle(uint8_t in_disp_num)
 200          {
 201   1              switch (in_disp_num)
 202   1              {
 203   2              case DISP_REALTEMP:
 204   2                      /* code */
 205   2                      Disp_Air_Temp(Air_real_temp_data);
 206   2                      break;
 207   2              case DISP_REALTEMP_Fahrenheit:
 208   2                      /* code */
 209   2                      Disp_Air_Temp((Air_real_temp_data * 9 / 5) + 32);
 210   2                      break;
 211   2              case DISP_SETTEMP:
 212   2                      /* code */
 213   2                      Disp_Air_Temp(air_key_data);
 214   2                      break;
 215   2              // case DISP_SETTEMP_Fahrenheit:
 216   2              //      /* code */
 217   2              //      Disp_Air_Temp((Air_set_temp_data * 9 / 5) + 32);
 218   2              //      break;
 219   2              case DISP_ERR:
 220   2                      /* code */
 221   2                      Disp_Air_Error(Error_num_Air);
 222   2                      break;
 223   2              case DISP_SLEEP:
 224   2                      /* code */
 225   2                      Disp_Air_Sleep();
 226   2                      break;
 227   2              case DISP_OFF:
 228   2                      /* code */
 229   2                      Disp_Air_Off();
 230   2                      break;
 231   2              default:
 232   2                      break;
 233   2              }
 234   1      }
 235          
 236          /* SOL DISP HANDLE*/
 237          void Disp_Sol_Handle(uint8_t in_disp_num)
 238          {
 239   1              switch (in_disp_num)
C51 COMPILER V9.60.7.0   LCD                                                               08/28/2025 16:11:08 PAGE 5   

 240   1              {
 241   2              case DISP_REALTEMP:
 242   2                      /* code */
 243   2                      Disp_Sol_Temp(Sol_real_temp_data);
 244   2                      break;
 245   2              case DISP_REALTEMP_Fahrenheit:
 246   2                      /* code */
 247   2                      Disp_Sol_Temp((Sol_real_temp_data * 9 / 5) + 32);
 248   2                      break;
 249   2              case DISP_SETTEMP:
 250   2                      /* code */
 251   2                      Disp_Sol_Temp(sol_key_data);
 252   2                      break;
 253   2              case DISP_ERR:
 254   2                      /* code */
 255   2                      Disp_Sol_Error(Error_num_Sol);
 256   2                      break;
 257   2              case DISP_SLEEP:
 258   2                      /* code */
 259   2                      Disp_Sol_Sleep();
 260   2                      break;
 261   2              case DISP_OFF:
 262   2                      /* code */
 263   2                      Disp_Sol_Off();
 264   2                      break;
 265   2              default:
 266   2                      break;
 267   2              }
 268   1      }
 269          
 270          void Disp_Fan_Handle(uint8_t in_disp_num)
 271          {
 272   1              switch (in_disp_num)
 273   1              {
 274   2              case DISP_WORK:
 275   2                      /* code */
 276   2                      Disp_Air_Speed(Air_speed_data);
 277   2                      break;
 278   2              case DISP_SLEEP:
 279   2                      /* code */
 280   2                      Disp_Air_Speed_Sleep();
 281   2                      break;
 282   2              case DISP_SLEEPING:
 283   2                      Disp_Air_Speed(99);
 284   2                      break;
 285   2              case DISP_OFF:
 286   2                      /* code */
 287   2                      Disp_Air_Speed_Off();
 288   2                      break;
 289   2              default:
 290   2                      break;
 291   2              }
 292   1      }
 293          
 294          /* SET DISP HANDLE*/
 295          
 296          void dispmenu_firstpageoption(uint8_t in_First_menu_number) // ??????
 297          {
 298   1              Disp_First_menu_number(in_First_menu_number, 1); // ???????????Px
 299   1              switch (in_First_menu_number)
 300   1              {
 301   2              case 0:                          // ????
C51 COMPILER V9.60.7.0   LCD                                                               08/28/2025 16:11:08 PAGE 6   

 302   2                      Disp_On_Off(ON); // ????ON
 303   2                      break;
 304   2              case 1: // ??????
 305   2                      Disp_Sol_Temp(air_set_cal_data);
 306   2                      break;
 307   2              case 2: // ??????
 308   2                      Disp_Sol_Temp(sol_set_cal_data);
 309   2                      break;
 310   2              case 3: // ??????
 311   2                      Disp_cf(set_cf_flag);
 312   2                      break;
 313   2              case 4: // ????
 314   2                      Disp_On_Off(disp_gate);
 315   2                      break;
 316   2              case 5:
 317   2                      Disp_On_Off(speak_gate);
 318   2                      break;
 319   2              case 6: // ????
 320   2                      Disp_Sol_Temp(set_sleep_time);
 321   2                      break;
 322   2              default:
 323   2                      break;
 324   2              }
 325   1      }
 326          
 327          //void dispmenu_secondpageoption(uint8_t in_Second_menu_number) // ??????????
 328          //{
 329          //      Disp_First_menu_number(in_Second_menu_number, 2); // ??????????Px
 330          //      if (ss_flag == 1 && last_state_flag == 1)
 331          //      {
 332          //              last_state_flag = 0;
 333          //              switch (in_Second_menu_number)
 334          //              {
 335          //              case 0: // ???? ??????????????????????
 336          //                      // disp_On_Off(ON);     //????ON
 337          //                      _nop_();
 338          //                      break;
 339          //              case 1: // COM1????
 340          //                      Disp_Sol_Temp(air_set_cal_data);
 341          //                      break;
 342          //              case 2: // COM2????
 343          //                      Disp_Sol_Temp(sol_set_cal_data);
 344          //                      break;
 345          //              case 3: // ??????
 346          //                      Disp_cf(set_cf_flag);
 347          //                      break;
 348          //              case 4: // ????
 349          //                      Disp_On_Off(disp_gate);
 350          //                      break;
 351          //              case 5: // ????
 352          //                      Disp_Sol_Temp(set_sleep_time);
 353          //                      break;
 354          //              default:
 355          //                      break;
 356          //              }
 357          //      }
 358          //      else if (ss_flag == 0 && last_state_flag == 0)
 359          //      {
 360          //              Disp_clean();
 361          //              last_state_flag = 1;
 362          //      }
 363          //}
C51 COMPILER V9.60.7.0   LCD                                                               08/28/2025 16:11:08 PAGE 7   

 364          
 365          void Disp_Set_Handle(uint8_t in_First_menu_number)
 366          {
 367   1              Disp_First_menu_number(in_First_menu_number, 1); //???Px
 368   1      
 369   1              dispmenu_firstpageoption(in_First_menu_number); 
 370   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1235    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =     24    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
